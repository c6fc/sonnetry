2.3.0
    - S3 bucket now gets SSL Only bucket policy applied at creation. Existing buckets are not modified.
    - Added support for SONNETRY_ASSUMEROLE envvar, which assumes the provided ARN before generating/deploying
    - Added ability to read remote state of other projects, including non-output attributes.
    - Added support for modules referenced as NPM packages when defined in sonnetry_modules/packages.json
1.3.0
	- Removed trailing slash from `sonnetry.path()`
	- Fixed binary renderPath bug when projectName was undefined.
	- Binary `apply` command now supports the 'q' flag to skip refresh. This might be a terrible idea.

1.2.1
	- RenderPath is now only created when `Sonnetry.write()` is called.

1.2.0
	Library
	- `Sonnetry().auth()` now populates a Sonnetry().identity with the results of STS GetCallerIdentity.
	- `Sonnetry().auth()` now throws errors instead of exiting the process.
	- `Sonnetry().render()` will now throw an error if the manifestation of the Jsonnet file fails.
	- `Sonnetry().write()` now supports nested directories.
	- `sonnetry.bootstrap()` now populates a Sonnetry().projectName. This is only available after calling Sonnetry().render().
	- New function `sonnetry.path()` returns the absolute path of the directory that Sonnetry was invoked from.

	Binary
	- The generate, apply, and destroy commands now use the project name from `sonnetry.bootstrap()` to determine the output path to use.
	- The init command has been removed. Use `npx terraform init` inside the output folder if you need to initialize Terraform manually.